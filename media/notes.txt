2. Media Queries – @media
Media queries let you apply specific CSS rules at certain screen sizes.

@media (condition) {
  /* CSS rules here */
}


/* Small screens (mobile) */
@media (max-width: 600px) {
  body {
    background-color: lightblue;
  }
}

/* Large screens (desktop) */
@media (min-width: 1024px) {
  body {
    background-color: lightgreen;
  }
}


3. Mobile-First vs Desktop-First
✅ Mobile-first design:
Start with styles for small screens
Add enhancements for larger screens using min-width


body {
  font-size: 16px;
}

/* Tablet and above */
@media (min-width: 768px) {
  body {
    font-size: 18px;
  }
}


Desktop-first design:
Start with large screen styles
Use max-width media queries to scale down for smaller screens


4. Fluid Typography
Scale text based on screen size using vw (viewport width):

h1 {
  font-size: 5vw; /* 5% of the viewport width */
}

5. Fluid Containers
Make layouts adjust using percentages or viewport units:

.container {
  width: 100%;
  max-width: 1200px;
  padding: 0 20px;
  margin: 0 auto;
}

Use vh and vw to size containers relative to the viewport:


Summary Checklist
Feature      	Mobile-First	         Desktop-First
Base Styles	  Small Screens	         Large Screens
Media Query	  min-width	             max-width
Flexibility	  More future-proof	     Less adaptive